#!/bin/bash
set -e

# D√©finir le chemin vers le binaire compil√©
SCREENCAPTUREKIT_BIN="./dist/screencapturekit"
CACHE_FILE="/tmp/screencapturekit-ids.cache"

# V√©rifier si le binaire existe
if [ ! -f "$SCREENCAPTUREKIT_BIN" ]; then
    echo "‚ö†Ô∏è Binaire optimis√© non trouv√© dans ./dist. Vous devez d'abord ex√©cuter 'npm run build-swift'"
    exit 1
fi

echo "üöÄ Utilisation du binaire compil√©: $SCREENCAPTUREKIT_BIN"
echo ""
echo "üé§ Ex√©cution de la capture audio uniquement..."
echo "üìÇ Le fichier sera enregistr√© dans: /tmp/audio-capture.mp3"

# V√©rifier si FFmpeg est install√©
if ! command -v ffmpeg &> /dev/null; then
    echo "‚ö†Ô∏è FFmpeg n'est pas install√©. L'√©tape de conversion audio ne sera pas possible."
    exit 1
fi

# Utiliser le cache si disponible et r√©cent (moins de 1 heure)
if [ -f "$CACHE_FILE" ] && [ $(($(date +%s) - $(stat -f %m "$CACHE_FILE"))) -lt 3600 ]; then
    echo "üöÄ Utilisation des identifiants en cache pour acc√©l√©rer la recherche..."
    source "$CACHE_FILE"
    echo "‚úÖ Identifiants charg√©s du cache: √©cran=$SCREEN_ID, audio=$AUDIO_ID, micro=$MIC_ID"
else
    echo "üîç Recherche rapide des p√©riph√©riques (sans affichage d√©taill√©)..."
    
    # R√©cup√©rer l'identifiant du premier √©cran disponible
    SCREEN_ID=$("$SCREENCAPTUREKIT_BIN" list screens 2>/dev/null | grep "ID:" | head -1 | awk '{print $2}')
    
    # Rechercher le casque Bose pour le son syst√®me
    AUDIO_ID=$("$SCREENCAPTUREKIT_BIN" list audio 2>/dev/null | grep -i "bose" | grep -i "id:" | head -1 | awk '{print $2}')
    
    # Rechercher le casque Bose comme microphone
    MIC_ID=$("$SCREENCAPTUREKIT_BIN" list microphones 2>/dev/null | grep -i "bose" | grep -i "id:" | head -1 | awk '{print $2}')
    
    # Sauvegarder les identifiants dans le cache
    echo "SCREEN_ID=\"$SCREEN_ID\"" > "$CACHE_FILE"
    echo "AUDIO_ID=\"$AUDIO_ID\"" >> "$CACHE_FILE"
    echo "MIC_ID=\"$MIC_ID\"" >> "$CACHE_FILE"
    
    echo "‚úÖ Identifiants trouv√©s et mis en cache pour les prochaines utilisations"
fi

# V√©rifier si un √©cran a √©t√© trouv√©
if [ -z "$SCREEN_ID" ]; then
  echo "‚ùå Aucun √©cran trouv√©"
  exit 1
fi

# Configurer les param√®tres audio syst√®me
if [ -n "$AUDIO_ID" ]; then
  echo "üîä Utilisation du casque Bose pour l'audio syst√®me: $AUDIO_ID"
  AUDIO_PARAM="--audio-device $AUDIO_ID"
else
  echo "‚ö†Ô∏è Casque Bose non trouv√© pour l'audio syst√®me"
  AUDIO_PARAM=""
fi

# Configurer les param√®tres du microphone
if [ -n "$MIC_ID" ]; then
  echo "üé§ Utilisation du casque Bose comme microphone: $MIC_ID"
  MIC_PARAM="--microphone-device $MIC_ID"
else
  echo "‚ö†Ô∏è Casque Bose non trouv√© comme microphone"
  MIC_PARAM=""
fi

# D√©finir les chemins des fichiers
TEMP_VIDEO="/tmp/audio-capture-test.mp4"
FINAL_AUDIO="/tmp/audio-capture.mp3"

# Ex√©cuter l'enregistrement avec une r√©solution minimale
echo ""
echo "üé¨ D√©marrage de la capture audio (Ctrl+C pour arr√™ter)..."
echo "üìã Commande: $SCREENCAPTUREKIT_BIN record --screen $SCREEN_ID $AUDIO_PARAM $MIC_PARAM --output $TEMP_VIDEO --duration 10"
"$SCREENCAPTUREKIT_BIN" record --screen $SCREEN_ID $AUDIO_PARAM $MIC_PARAM --output $TEMP_VIDEO --duration 10

echo ""
echo "‚úÖ Capture termin√©e"

# Extraire et mixer l'audio avec FFmpeg
echo "üîÑ Extraction et mixage de l'audio..."
# Extraire les informations sur les pistes audio
AUDIO_INFO=$(ffprobe -v error -show_entries stream=index,codec_type -of csv=p=0 "$TEMP_VIDEO" | grep audio)

# V√©rifier s'il y a des pistes audio
if [[ $(echo "$AUDIO_INFO" | wc -l) -ge 1 ]]; then
    # Obtenir les indices des pistes audio
    AUDIO_STREAMS=$(echo "$AUDIO_INFO" | cut -d',' -f1 | sed 's/^/0:/g')
    
    if [[ $(echo "$AUDIO_INFO" | wc -l) -ge 2 ]]; then
        echo "üîä Mixage de $(echo "$AUDIO_INFO" | wc -l) pistes audio..."
        
        # Cr√©er le filtre complex pour mixer les pistes audio
        FILTER_COMPLEX="[${AUDIO_STREAMS// /][}]amix=inputs=$(echo "$AUDIO_INFO" | wc -l):duration=longest[aout]"
        
        # Extraire l'audio mix√© avec FFmpeg
        ffmpeg -v warning -i "$TEMP_VIDEO" -filter_complex "$FILTER_COMPLEX" -vn -c:a libmp3lame -q:a 2 "$FINAL_AUDIO"
    else
        echo "‚ö†Ô∏è Une seule piste audio d√©tect√©e, pas besoin de mixage."
        # Extraire uniquement l'audio sans mixage
        ffmpeg -v warning -i "$TEMP_VIDEO" -vn -c:a libmp3lame -q:a 2 "$FINAL_AUDIO"
    fi
    
    echo "‚úÖ Extraction audio termin√©e: $FINAL_AUDIO"
else
    echo "‚ùå Aucune piste audio d√©tect√©e dans l'enregistrement."
    exit 1
fi

# Supprimer le fichier vid√©o temporaire
rm "$TEMP_VIDEO"

echo "üìÇ V√©rifiez le fichier audio: $FINAL_AUDIO"
echo "üéµ Pour l'√©couter: ffplay \"$FINAL_AUDIO\"" 